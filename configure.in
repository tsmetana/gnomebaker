AC_INIT(GnomeBaker, 0.6.4, gnomebaker)
AC_PREREQ(2.59)
AC_COPYRIGHT([Copyright (C) 2003-2006 Luke Biddell, 2007-2008 Mario Danic])

AC_CONFIG_SRCDIR(src/gnomebaker.h)
AC_CONFIG_HEADERS([config.h])
AM_INIT_AUTOMAKE(1.9 -Wall dist-bzip2 no-define)

AM_MAINTAINER_MODE 

dnl -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64

AC_ISC_POSIX
AC_SYS_LARGEFILE
AC_PROG_CC
AC_HEADER_STDC
AM_PATH_GLIB_2_0
AC_PROG_INTLTOOL

dnl --------------------------------------------------------------------
dnl
dnl Library Dependencies, uses pkg-config to detect correct version, etc
dnl
dnl --------------------------------------------------------------------

AC_SUBST(GTK_CAIRO_REQUIRED, 2.8.0)
AC_SUBST(LIBNOTIFY_REQUIRED, 0.2.1)
AC_SUBST(LIBGNOME_REQUIRED, 2.8.1)
AC_SUBST(GTK_REQUIRED, 2.6.0)
AC_SUBST(GLIB_REQUIRED, 2.4.0)
AC_SUBST(LIBXML_REQUIRED, 2.4.0)
AC_SUBST(LIBGLADE_REQUIRED, 2.4.2)
AC_SUBST(GSTREAMER_08_REQUIRED, 0.8.9)
AC_SUBST(GSTREAMER_010_REQUIRED, 0.9.7)


PKG_CHECK_MODULES(GNOMEBAKER,
[
	libgnomeui-2.0 >= $LIBGNOME_REQUIRED
	gtk+-2.0 >= $GTK_REQUIRED
	glib-2.0 >= $GLIB_REQUIRED
	libglade-2.0 >= $LIBGLADE_REQUIRED
	libxml-2.0 >= $LIBXML_REQUIRED
])

dnl ---------------------------------------------------------------------------
dnl - Is cairo available?
dnl ---------------------------------------------------------------------------
PKG_CHECK_MODULES(CAIRO, gtk+-2.0 >= $GTK_CAIRO_REQUIRED, have_gtk_cairo=yes, have_gtk_cairo=no)
if test x$have_gtk_cairo = xyes; then
	AC_DEFINE(CAIRO_WIDGETS,1,[cairo support])
fi

dnl ---------------------------------------------------------------------------
dnl - Is libnotify available?
dnl ---------------------------------------------------------------------------
AC_ARG_ENABLE(libnotify,
              [AC_HELP_STRING([--enable-libnotify],
                              [build with libnotify support [default=no]])],,
              [enable_libnotify=no])
if test x$enable_libnotify = xno ; then
    have_libnotify=no;
else
    # See if we have sufficiently new libnotify library
    PKG_CHECK_MODULES(LIBNOTIFY, libnotify >= $LIBNOTIFY_REQUIRED, have_libnotify=yes, have_libnotify=no)
    if test x$enable_libnotify = xauto ; then
        if test x$have_libnotify = xno ; then
                AC_MSG_WARN([Sufficiently new libnotify library not found])
        fi
    else 
        if test x$have_libnotify = xno ; then
                AC_MSG_ERROR([libnotify explicitly required, and sufficiently new libnotify library not found])
        fi
    fi
fi
AM_CONDITIONAL(HAVE_LIBNOTIFY, test x$have_libnotify = xyes)
if test x$have_libnotify = xyes ; then
    # Find out the version of LIBNOTIFY we're using
    libnotify_version=`pkg-config --modversion libnotify`
    LIBNOTIFY_VERSION_MAJOR=`echo $libnotify_version | awk -F. '{print $1}'`
    LIBNOTIFY_VERSION_MINOR=`echo $libnotify_version | awk -F. '{print $2}'`
    LIBNOTIFY_VERSION_MICRO=`echo $libnotify_version | awk -F. '{print $3}'`
    if test "z$LIBNOTIFY_VERSION_MAJOR" = "z"; then
        LIBNOTIFY_VERSION_MAJOR="0"
    fi
    if test "z$LIBNOTIFY_VERSION_MINOR" = "z"; then
        LIBNOTIFY_VERSION_MINOR="0"
    fi
    if test "z$LIBNOTIFY_VERSION_MICRO" = "z"; then
        LIBNOTIFY_VERSION_MICRO="0"
    fi
    echo "Your libnotify version is $LIBNOTIFY_VERSION_MAJOR.$LIBNOTIFY_VERSION_MINOR.$LIBNOTIFY_VERSION_MICRO."
    LIBNOTIFY_CFLAGS="$LIBNOTIFY_CFLAGS -DLIBNOTIFY_VERSION_MAJOR=$LIBNOTIFY_VERSION_MAJOR"
    LIBNOTIFY_CFLAGS="$LIBNOTIFY_CFLAGS -DLIBNOTIFY_VERSION_MINOR=$LIBNOTIFY_VERSION_MINOR"
    LIBNOTIFY_CFLAGS="$LIBNOTIFY_CFLAGS -DLIBNOTIFY_VERSION_MICRO=$LIBNOTIFY_VERSION_MICRO"

    AC_DEFINE(HAVE_LIBNOTIFY,1,[libnotify support])
    GNOMEBAKER_CFLAGS="$GNOMEBAKER_CFLAGS $LIBNOTIFY_CFLAGS"
	GNOMEBAKER_LIBS="$GNOMEBAKER_LIBS $LIBNOTIFY_LIBS"
fi

dnl ---------------------------------------------------------------------------
dnl - Check for GStreamer, note that 0.10 overrides 0.8
dnl ---------------------------------------------------------------------------

PKG_CHECK_MODULES(GSTREAMER_0_10, gstreamer-0.10 >= $GSTREAMER_010_REQUIRED, have_gstreamer_010=yes,have_gstreamer_010=no)
if test x$have_gstreamer_010 = xno ; then
	PKG_CHECK_MODULES(GSTREAMER_0_8, gstreamer-0.8 >= $GSTREAMER_08_REQUIRED, have_gstreamer_08=yes,have_gstreamer_08=no)
    if test x$have_gstreamer_08 = xno ; then
        AC_MSG_ERROR([One of either gstreamer 0.10 or 0.8 is required and neither could be found])
    else
    	GSTREAMER_CFLAGS="$GSTREAMER_0_8_CFLAGS"
		GSTREAMER_LIBS="$GSTREAMER_0_8_LIBS"
		AC_SUBST(gstreamer-0.8)
    fi
else 
	GSTREAMER_CFLAGS="$GSTREAMER_0_10_CFLAGS"
	GSTREAMER_LIBS="$GSTREAMER_0_10_LIBS"
	AC_SUBST(gstreamer-0.10)
	AC_DEFINE(GST_010,1,[gstreamer version])
fi

GNOMEBAKER_CFLAGS="$GNOMEBAKER_CFLAGS $GSTREAMER_CFLAGS"
GNOMEBAKER_LIBS="$GNOMEBAKER_LIBS $GSTREAMER_LIBS"


dnl -------------------------------------------------------------------
dnl Language Support
dnl -------------------------------------------------------------------
GETTEXT_PACKAGE=gnomebaker
AC_SUBST(GETTEXT_PACKAGE)
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE,"$GETTEXT_PACKAGE",[Gettext package name])

ALL_LINGUAS="af az bg bo ca cs da de_AT de_CH de_DE de el en_AU en_CA en en_US eo es_AR es_CO es_CR es_ES es_MX es et eu_ES eu fa fi fr_CH fr_FR fr gl he hr hu is it_IT it ja ka ko lt lv mk ml ms nb nl_BE nl_NL nl no pa pl pt_BR pt pt_PT ro ru sk sl sr st sv te tl tr uk ur yi zh_CN zh_HK zh zh_TW"
AM_GLIB_GNU_GETTEXT


dnl -------------------------------------------------------------------
dnl Add large file support
dnl -------------------------------------------------------------------
GNOMEBAKER_CFLAGS="$GNOMEBAKER_CFLAGS `getconf LFS_CFLAGS`"

AC_SUBST(GNOMEBAKER_CFLAGS)
AC_SUBST(GNOMEBAKER_LIBS)

AC_OUTPUT([
Makefile
src/Makefile
pixmaps/Makefile
media/Makefile
gnomebaker.desktop
help/Makefile
help/C/Makefile
po/Makefile.in
])

echo
dnl ==========================================================================
echo "
                    GnomeBaker $VERSION
===========================================================

        prefix:                    ${prefix}
        compiler:                  ${CC}
        cflags:                    ${CFLAGS}
        libnotify support:         ${have_libnotify}
        cairo support:             ${have_gtk_cairo}
        gstreamer 0.10:            ${have_gstreamer_010}
        gstreamer 0.8:             ${have_gstreamer_08}
        gnomebaker libs:           ${GNOMEBAKER_LIBS}
        gnomebaker cflags:         ${GNOMEBAKER_CFLAGS}        
"
echo
